[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: !cp_Head:PC10

# Variables to track the automated loading process
[gcode_macro _FILAMENT_LOAD_VARS]
variable_loading_complete: 0
variable_current_extruder: 0
variable_auto_mode: 0
gcode:

# Single extruder loading macro - can be called manually or by automation
[gcode_macro LOAD_FILAMENT]
gcode:
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
  {% if not printer["filament_switch_sensor filament_sensor"].filament_detected %}
  {action_respond_info("AutoLoad Start")}
  UPDATE_DELAYED_GCODE ID=auto_load_timeout DURATION=45
  UPDATE_DELAYED_GCODE ID=auto_load DURATION=0.8
  {% else %}
  RESPOND TYPE=error MSG='Filament already detected – remove and try again'
  # Set completion flag even on error so the loop doesn't hang
  SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=loading_complete VALUE=1
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
  # If in auto mode, continue to next extruder
  {% if printer["gcode_macro _FILAMENT_LOAD_VARS"].auto_mode == 1 %}
    UPDATE_DELAYED_GCODE ID=_continue_auto_load DURATION=1.0
  {% endif %}
  {% endif %}

# Macro to load filament on a specific extruder (single load only)
[gcode_macro LOAD_SINGLE_EXTRUDER]
description: Load filament on a specific extruder (usage: LOAD_SINGLE_EXTRUDER T=0)
gcode:
  {% set extruder = params.T|default(0)|int %}
  
  {% if extruder < 0 or extruder > 7 %}
  RESPOND TYPE=error MSG='Invalid extruder number. Valid range is T0-T7'
  {% else %}
  {action_respond_info("Loading extruder T" + extruder|string)}
  
  # Make sure auto_mode is off so it doesn't continue to next extruder
  SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=auto_mode VALUE=0
  SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=loading_complete VALUE=0
  
  # Select the extruder
  T{extruder}
  
  # Load filament on that extruder
  LOAD_FILAMENT
  {% endif %}

[delayed_gcode auto_load]
gcode:
  {% if not printer["filament_switch_sensor filament_sensor"].filament_detected %}
  {action_respond_info("AutoLoad Feeding...")}
  UPDATE_DELAYED_GCODE ID=auto_load DURATION=0.8
  G91
  G92 E0
  G1 E25 F2500
  {% else %}
  UPDATE_DELAYED_GCODE ID=auto_load DURATION=0
  UPDATE_DELAYED_GCODE ID=auto_unload DURATION=0.5
  {action_respond_info("AutoLoad Detected")}
  {% endif %}

[delayed_gcode auto_unload]
gcode:
  {% if printer["filament_switch_sensor filament_sensor"].filament_detected %}
  {action_respond_info("AutoLoad Retracting...")}
  UPDATE_DELAYED_GCODE ID=auto_unload DURATION=0.5
  G91
  G92 E0
  G1 E-1 F500
  {% else %}
  {action_respond_info("AutoLoad Parking")}
  UPDATE_DELAYED_GCODE ID=auto_unload DURATION=0
  UPDATE_DELAYED_GCODE ID=auto_load_timeout DURATION=0
  G91
  G92 E0
  G1 E-35 F1000
  {action_respond_info("AutoLoad Finished")}
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
  # Set completion flag so the loop can continue
  SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=loading_complete VALUE=1
  # If in auto mode, continue to next extruder
  {% if printer["gcode_macro _FILAMENT_LOAD_VARS"].auto_mode == 1 %}
    UPDATE_DELAYED_GCODE ID=_continue_auto_load DURATION=2.0
  {% endif %}
  {% endif %}

[delayed_gcode auto_load_timeout]
gcode:
  RESPOND TYPE=error MSG='AutoLoad Failed – Check filament and try again'
  UPDATE_DELAYED_GCODE ID=auto_unload DURATION=0
  UPDATE_DELAYED_GCODE ID=auto_load DURATION=0
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
  # Set completion flag on timeout so the loop doesn't hang
  SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=loading_complete VALUE=1
  # If in auto mode, continue to next extruder even on error
  {% if printer["gcode_macro _FILAMENT_LOAD_VARS"].auto_mode == 1 %}
    UPDATE_DELAYED_GCODE ID=_continue_auto_load DURATION=2.0
  {% endif %}

# Delayed gcode that continues the automated loading process
[delayed_gcode _continue_auto_load]
gcode:
    {% set current = printer["gcode_macro _FILAMENT_LOAD_VARS"].current_extruder %}
    {% set next_extruder = current + 1 %}
    
    {% if next_extruder < 8 %}
        {action_respond_info("Moving to extruder T" + next_extruder|string + " (" + (next_extruder+1)|string + "/8)")}
        
        # Update current extruder counter
        SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=current_extruder VALUE={next_extruder}
        
        # Select next extruder
        T{next_extruder}
        
        # Reset completion flag for next extruder
        SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=loading_complete VALUE=0
        
        # Start loading on next extruder
        LOAD_FILAMENT
    {% else %}
        # All extruders complete
        {action_respond_info("Returning to extruder T0...")}
        SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=auto_mode VALUE=0
        T0
        {action_respond_info("All extruders loaded successfully! Ready to print.")}
    {% endif %}

# Main automation macro - starts the automatic loading process for all 8 extruders
[gcode_macro LOAD_ALL_EXTRUDERS]
description: Load filament on all 8 extruders automatically
gcode:
    {action_respond_info("Starting automatic filament loading for all 8 extruders...")}
    
    # Set up auto mode
    SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=auto_mode VALUE=1
    SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=current_extruder VALUE=0
    SET_GCODE_VARIABLE MACRO=_FILAMENT_LOAD_VARS VARIABLE=loading_complete VALUE=0
    
    # Start with first extruder
    {action_respond_info("Loading extruder T0 (1/8)")}
    T0
    LOAD_FILAMENT
